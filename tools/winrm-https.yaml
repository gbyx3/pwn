# This playbook will configure WinRM to use HTTPS on port 5986
# It will also configure the firewall to allow inbound connections on port 5986
# It will also configure the firewall to allow inbound connections on port 5986 for the public profile if the variable public_fw is set to true
#
# Example usage:
# ansible-playbook -i 10.0.4.202, cert.yml -e "public_fw=true" -e "restart_delay=2"

---
- hosts: all
  become: True
  gather_facts: False
  vars:
    ansible_connection: "psrp"
    ansible_host: ""
    ansible_port: 5985
    ansible_user: ""
    ansible_password: ""
    ansible_become_method: "runas"
    ansible_become_user: ""
    ansible_become_password: ""
    ansible_psrp_protocol: "http"
    ansible_psrp_cert_validation: ignore
    ansible_psrp_ignore_proxy: yes
  tasks:
    - name: Configure new https listener
      vars:
      ansible.windows.win_powershell:
        script: |
          $HTTPS_Listener = Get-ChildItem WSMan:\Localhost\listener | Where-Object {$_.Keys -Contains "Transport=HTTPS"}
          if ($HTTPS_Listener -ne $null){
            try {
            Get-ChildItem "WSMan:\Localhost\listener" | Where-Object {$_.Keys -Contains "Transport=HTTPS"} | Remove-Item -recurse
            }
            catch {
              break
            }
          }
          $HOSTNAME = (($env:computername).ToLower())
          $DOMAIN = (Get-WmiObject Win32_ComputerSystem | Select-Object -ExpandProperty Domain).ToLower()
          if ($DOMAIN -eq "workgroup" ){
            $FQDN = "$HOSTNAME"
          }
          else {
            $FQDN = "$HOSTNAME.$DOMAIN"
          }
          $CERT = Get-ChildItem -Path Cert:\LocalMachine\My\ | Where-Object { ($_.Issuer -eq "CN=$FQDN") -and ($_.Subject -eq "CN=$FQDN") }
          if ($CERT -ne $null) { $CERT | Remove-Item }
          $PFX = New-SelfSignedCertificate -CertstoreLocation Cert:\LocalMachine\My -DnsName $FQDN
          New-Item -Path WSMan:\LocalHost\Listener `
            -Address * `
            -Transport HTTPS `
            -Hostname $FQDN `
            -CertificateThumbPrint $PFX.Thumbprint `
            -Port "5986" `
            -force


    - name: Configure firewall
      ansible.windows.win_powershell:
        script: |
          New-NetFirewallRule -Name "WINRM-HTTPS-In-TCP" `
            -DisplayName "Windows Remote Management (HTTPS-In)" `
            -Description "Inbound rule for Windows Remote Management. [TCP 5986]" `
            -Group "Windows Remote Management" `
            -Program "System" `
            -Protocol TCP `
            -LocalPort "5986" `
            -Action Allow `
            -Profile Domain,Private

    - name: Configure public firewall
      ansible.windows.win_powershell:
        script: |
          New-NetFirewallRule -Name "WINRM-HTTPS-In-TCP-PUBLIC" `
            -DisplayName "Windows Remote Management (HTTPS-In)" `
            -Description "Inbound rule for Windows Remote Management. [TCP 5986]" `
            -Group "Windows Remote Management" `
            -Program "System" `
            -Protocol TCP `
            -LocalPort "5986" `
            -Action Allow `
            -Profile Public
      when: public_fw|default(false) | bool


    - name: Restart WinRM
      ignore_errors: True
      ansible.windows.win_powershell:
        script: |
          Restart-Service WinRM


    - name: Give WinRM a chance to restart
      pause:
        seconds: "{{ restart_delay | default (3) }}"


    - name: Verify HTTPS
      vars:
        ansible_port: 5986
        ansible_psrp_protocol: "https"
      ansible.windows.win_powershell:
        script: |
          Get-ChildItem WSMan:\Localhost\listener | ConvertTo-Json -Dept 1
